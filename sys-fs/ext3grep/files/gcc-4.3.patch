--- src/custom.cc.orig	2008-11-09 18:02:00.000000000 +0100
+++ src/custom.cc	2008-11-09 18:02:32.000000000 +0100
@@ -42,6 +42,9 @@
 #include "get_block.h"
 #include "init_consts.h"
 #include "print_inode_to.h"
+#include <sys/time.h>
+#include <cstring>
+#include <ctime>

 // The first part of this file was written and used for custom job:
 // recovering emails on a 40 GB partition that had no information
--- src/dir_inode_to_block.cc	2008-06-28 15:40:06.000000000 +0200
+++ src/dir_inode_to_block.cc.new	2008-11-09 18:04:13.000000000 +0100
@@ -40,6 +40,8 @@
 #include "print_inode_to.h"
 #include "directories.h"
 #include "journal.h"
+#include <cstring>
+#include <limits>
 
 //-----------------------------------------------------------------------------
 //
--- src/directories.cc	2008-10-16 00:45:31.000000000 +0200
+++ src/directories.cc.new	2008-11-09 18:08:30.000000000 +0100
@@ -33,6 +33,9 @@
 #include "indirect_blocks.h"
 #include "get_block.h"
 #include "directories.h"
+#include <cstring>
+#include <ctime>
+#include <algorithm>
 
 //-----------------------------------------------------------------------------
 //
--- src/is_blockdetection.h	2008-07-11 02:23:37.000000000 +0200
+++ src/is_blockdetection.h.new	2008-11-09 18:09:34.000000000 +0100
@@ -31,6 +31,8 @@
 
 #include "inode.h"	// Needed for InodePointer
 
+#include <cstring>
+
 // Return type of is_directory.
 enum is_directory_type {
   isdir_no = 0,         // Block is not a directory.
--- src/commandline.cc	2008-10-18 03:06:35.000000000 +0200
+++ src/commandline.cc.new	2008-11-09 18:20:54.000000000 +0100
@@ -32,6 +32,8 @@
 #include "globals.h"
 #include "restore.h"
 #include "accept.h"
+#include <ctime>
+#include <limits>
 
 // Commandline options.
 bool commandline_superblock = false;
--- src/histogram.cc.orig	2008-11-09 18:41:42.000000000 +0100
+++ src/histogram.cc	2008-11-09 18:41:30.000000000 +0100
@@ -29,6 +29,7 @@
 #endif
 
 #include "commandline.h"
+#include <cstring>
 
 //-----------------------------------------------------------------------------
 //
--- src/init_files.cc	2008-06-29 04:39:33.000000000 +0200
+++ src/init_files.cc.new	2008-11-09 18:42:57.000000000 +0100
@@ -33,6 +33,7 @@
 #include "globals.h"
 #include "forward_declarations.h"
 #include "journal.h"
+#include <algorithm>
 
 //-----------------------------------------------------------------------------
 //
--- src/init_directories.cc.orig	2008-11-09 18:44:06.000000000 +0100
+++ src/init_directories.cc	2008-11-09 18:43:49.000000000 +0100
@@ -39,6 +39,7 @@
 #include "get_block.h"
 #include "journal.h"
 #include "dir_inode_to_block.h"
+#include <limits>
 
 all_directories_type all_directories;
 inode_to_directory_type inode_to_directory;
--- src/indirect_blocks.cc	2008-10-20 20:45:29.000000000 +0200
+++ src/indirect_blocks.cc.new	2008-11-09 18:45:45.000000000 +0100
@@ -54,6 +54,7 @@
 #include "forward_declarations.h"
 #include "endian_conversion.h"
 #include "superblock.h"
+#include <set>
 
 //-----------------------------------------------------------------------------
 //
--- src/journal.cc.orig	2008-11-09 18:47:39.000000000 +0100
+++ src/journal.cc	2008-11-09 18:47:27.000000000 +0100
@@ -37,6 +37,8 @@
 #include "indirect_blocks.h"
 #include "get_block.h"
 #include "commandline.h"
+#include <algorithm>
+#include <ctime>
 
 //-----------------------------------------------------------------------------
 //
--- src/inode.cc	2008-06-29 04:44:39.000000000 +0200
+++ src/inode.cc.new	2008-11-09 18:49:52.000000000 +0100
@@ -33,6 +33,7 @@
 #include "globals.h"
 #include "conversion.h"
 #include "inode.h"
+#include <limits>
 
 #if USE_MMAP
 void inode_unmap(int group)
--- src/last_undeleted_directory_inode_refering_to_block.cc	2008-07-11 19:18:57.000000000 +0200
+++ src/last_undeleted_directory_inode_refering_to_block.cc.new	2008-11-09 18:50:53.000000000 +0100
@@ -29,6 +29,7 @@
 #include "is_blockdetection.h"
 #include "inode_refers_to.h"
 #include "journal.h"
+#include <limits>
 
 // Return std::numeric_limits<int>::max() if the inode is still allocated
 // and refering to the given block, otherwise return the Journal sequence
--- src/ostream_operators.cc.orig	2008-11-09 18:53:05.000000000 +0100
+++ src/ostream_operators.cc	2008-11-09 18:52:26.000000000 +0100
@@ -31,6 +31,7 @@
 #include "endian_conversion.h"
 #include "superblock.h"
 #include "globals.h"
+#include <ctime>
 
 //-----------------------------------------------------------------------------
 //
--- src/print_inode_to.cc	2008-10-17 03:27:15.000000000 +0200
+++ src/print_inode_to.cc.new	2008-11-09 18:54:26.000000000 +0100
@@ -30,6 +30,7 @@
 #include "FileMode.h"
 #include "globals.h"
 #include "print_symlink.h"
+#include <ctime>
 
 void print_inode_to(std::ostream& os, Inode const& inode)
 {
--- src/restore.cc	2008-11-09 18:58:07.000000000 +0100
+++ src/restore.cc.new	2008-11-09 18:58:17.000000000 +0100
@@ -44,6 +44,9 @@
 #include "FileMode.h"
 #include "indirect_blocks.h"
 #include "print_symlink.h"
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
 
 
 #ifdef CPPGRAPH
--- src/show_journal_inodes.cc	2008-10-18 03:06:35.000000000 +0200
+++ src/show_journal_inodes.cc.new	2008-11-09 18:58:59.000000000 +0100
@@ -30,6 +30,7 @@
 
 #include "journal.h"
 #include "print_inode_to.h"
+#include <limits>
 
 void show_journal_inodes(int inodenr)
 {
